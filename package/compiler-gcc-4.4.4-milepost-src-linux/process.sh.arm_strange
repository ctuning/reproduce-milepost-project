#! /bin/bash

#
# Installation script for CK packages.
#
# See CK LICENSE.txt for licensing details.
# See CK Copyright.txt for copyright details.
#
# Developer(s): Grigori Fursin, 2015
#

# PACKAGE_DIR
# INSTALL_DIR

export PACKAGE_NAME=milepost-gcc-4.4.4

#
echo ""
echo "Copying package files ..."

cd ${INSTALL_DIR}


if ["$LD_LIBRARY_PATH" -eq ""]
then
 export LD_LIBRARY_PATH=/usr/lib/arm-linux-gnueabihf:/usr/lib/gcc/arm-linux-gnueabihf/4.9
else
 export LD_LIBRARY_PATH=/usr/lib/arm-linux-gnueabihf:/usr/lib/gcc/arm-linux-gnueabihf/4.9:$LD_LIBRARY_PATH
fi

if ["$LIBRARY_PATH" -eq ""]
then
 export LIBRARY_PATH=/usr/lib/arm-linux-gnueabihf:/usr/lib/gcc/arm-linux-gnueabihf/4.9
else
 export LIBRARY_PATH=/usr/lib/arm-linux-gnueabihf:/usr/lib/gcc/arm-linux-gnueabihf/4.9:$LIBRARY_PATH
fi


#/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/obj/./gcc/xgcc -v -L/usr/lib/arm-linux-gnueabihf/4.9  -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/obj/./gcc/ -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/bin/ -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/lib/ -isystem /home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/include -isystem /home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/sys-include -export-dynamic -ldl
#/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/obj/./gcc/xgcc -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/obj/./gcc/ -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/bin/ -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/lib/ -isystem /home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/include -isystem /home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/sys-include -export-dynamic -ldl

#/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/obj/./gcc/xgcc -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/obj/./gcc/ -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/bin/ -B/home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/lib/ -isystem /home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/include -isystem /home/fursin/CK-TOOLS/gcc-milepost-4.4.4-linux-32/armv7l-unknown-linux-gnueabi/sys-include -export-dynamic -ldl -o conftest -g -fgnu89-inline -I/usr/include/arm-linux-gnueabihf     test.c  -march=armv7
#exit 1



#cp ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.bz2 .
#bzip2 -d ${PACKAGE_NAME}.tar.bz2
#tar xvf ${PACKAGE_NAME}.tar
#rm ${PACKAGE_NAME}.tar

rm -rf obj

export INSTALL_OBJ_DIR=${INSTALL_DIR}/obj
mkdir $INSTALL_OBJ_DIR

# 
echo ""
echo "Patching to support GCC v5+ ..."
cp ${PACKAGE_DIR}/patch1 ${INSTALL_DIR}/${PACKAGE_NAME}

cd ${INSTALL_DIR}/${PACKAGE_NAME}
#patch -p2 < patch1

#
echo ""
echo "Configuring ..."

#if ["$LIBRARY_PATH" -eq ""]
#then
# export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu
#else
# export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LIBRARY_PATH
#fi


export CFLAGS="-fgnu89-inline" # -I/usr/include/arm-linux-gnueabihf"
#export CFLAGS="-fgnu89-inline -I/usr/include/arm-linux-gnueabihf -D__ARM_PCS_VFP"
#export CFLAGS="-fgnu89-inline"

cd ${INSTALL_OBJ_DIR}
../${PACKAGE_NAME}/configure --prefix=${INSTALL_DIR} \
 --disable-bootstrap \
 --with-mode=arm \
 --enable-languages=c \
 --enable-obsolete --disable-threads \
 --without-headers \
 --enable-long-long \
         --disable-multilib \
         --disable-decimal-float \
         --disable-libgomp \
         --disable-libmudflap \
         --disable-nls \
         --disable-shared \
         --disable-libssp \
         --with-newlib \
         --with-system-zlib

# --target=arm-linux-gnueabihf \

# --with-mode=arm

#--with-newlib \
#--with-fpu=vfp \
#--with-mode=arm \
#--with-float=hard \
#--with-gnu-as \
#--with-gnu-ld --disable-shared --disable-libssp

# --disable-libmudflap \
# --disable-libquadmath \
# --disable-libquadmath-support \
# --with-system-zlib \
# --enable-multiarch \
# --enable-long-long \
# --with-arch=armv6 \
# --with-float=hard \
# --with-fpu=vfp \
# --enable-libstdcxx-debug \
# --enable-libstdcxx-time=yes \
# --enable-version-specific-runtime-libs

#                             --with-arch=armv7 \
#                             --with-float=hard \
#                             --enable-multilib \
#                             --enable-multiarch

#                             --enable-bootstrap=no \

#                             --with-float=hard \
#                             --with-fpu=vfp

#                             --enable-multiarch \
#                             --disable-multilib

#                             --with-gmp=${CK_ENV_LIB_GMP} \
#                             --with-mpfr=${CK_ENV_LIB_MPFR} \
#                             --with-mpc=${CK_ENV_LIB_MPC} \
#                             --disable-multilib \
#                             --with-float=hard

#                             --enable-version-specific-runtime-libs \
#                              --enable-multilib
#                             --build=x86_64-linux-gnu \
#                             CFLAGS="-fgnu89-inline"
# FGG had issues with 'cannot find crti.o: No such file or directory',
# hence FGG added export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LIBRARY_PATH 

if [ "${?}" != "0" ] ; then
  echo "Error: Configuration failed in $PWD!"
  exit 1
fi

# Build
echo ""
echo "Building ..."
echo ""
cd ${INSTALL_OBJ_DIR}
make -j4
if [ "${?}" != "0" ] ; then
  echo "Error: Compilation failed in $PWD!" 
  exit 1
fi

exit 1

# Install
echo ""
echo "Installing ..."
echo ""

make install
if [ "${?}" != "0" ] ; then
  echo "Error: Compilation failed in $PWD!" 
  exit 1
fi
